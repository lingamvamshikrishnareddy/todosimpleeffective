{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\todo list\\\\frontend\\\\src\\\\components\\\\KanbanColumn.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDroppable } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport SortableTask from './SortableTask';\n\n// Receive plain ID, construct droppable ID internally\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanColumn = ({\n  id,\n  title,\n  taskIds,\n  tasks,\n  getTaskById,\n  onEdit,\n  onDelete\n}) => {\n  _s();\n  const {\n    setNodeRef,\n    isOver\n  } = useDroppable({\n    id: `column:${id}`,\n    // Use prefix to distinguish columns in handlers\n    data: {\n      // Add data for context in handlers\n      type: 'column',\n      accepts: ['task'] // Specify what it accepts\n    }\n  });\n\n  // Get full task objects for rendering\n  const columnTasks = taskIds.map(taskId => getTaskById(taskId)).filter(Boolean); // Filter out nulls if task not found\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    // Use the plain `id` for data attribute if needed elsewhere\n    \"data-column-id\": id,\n    ref: setNodeRef // Attach droppable ref here\n    ,\n    className: `kanban-column ${isOver ? 'drop-active' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-column-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"kanban-column-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"task-count\",\n        children: taskIds.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SortableContext, {\n      items: taskIds // Use only IDs for SortableContext\n      ,\n      strategy: verticalListSortingStrategy,\n      id: id // Pass the plain column id as the context id\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-column-content\",\n        children: columnTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag tasks here or add new ones\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this) : columnTasks.map(task => /*#__PURE__*/_jsxDEV(SortableTask, {\n          id: task._id || task.id // Pass the task's unique ID\n          ,\n          task: task,\n          onEdit: () => onEdit(task) // Pass original task object\n          ,\n          onDelete: () => onDelete(task._id || task.id) // Pass task ID\n        }, task._id || task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanColumn, \"DmJTTt6A5xWIX/faBiFge3FOLrw=\", false, function () {\n  return [useDroppable];\n});\n_c = KanbanColumn;\nexport default KanbanColumn;\nvar _c;\n$RefreshReg$(_c, \"KanbanColumn\");","map":{"version":3,"names":["React","useDroppable","SortableContext","verticalListSortingStrategy","SortableTask","jsxDEV","_jsxDEV","KanbanColumn","id","title","taskIds","tasks","getTaskById","onEdit","onDelete","_s","setNodeRef","isOver","data","type","accepts","columnTasks","map","taskId","filter","Boolean","ref","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","items","strategy","task","_id","_c","$RefreshReg$"],"sources":["D:/Projects/todo list/frontend/src/components/KanbanColumn.js"],"sourcesContent":["import React from 'react';\r\nimport { useDroppable } from '@dnd-kit/core';\r\nimport { SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\r\nimport SortableTask from './SortableTask';\r\n\r\n// Receive plain ID, construct droppable ID internally\r\nconst KanbanColumn = ({ id, title, taskIds, tasks, getTaskById, onEdit, onDelete }) => {\r\n  const { setNodeRef, isOver } = useDroppable({\r\n    id: `column:${id}`, // Use prefix to distinguish columns in handlers\r\n    data: { // Add data for context in handlers\r\n        type: 'column',\r\n        accepts: ['task'] // Specify what it accepts\r\n    }\r\n  });\r\n\r\n  // Get full task objects for rendering\r\n  const columnTasks = taskIds.map(taskId => getTaskById(taskId)).filter(Boolean); // Filter out nulls if task not found\r\n\r\n  return (\r\n    <div\r\n       // Use the plain `id` for data attribute if needed elsewhere\r\n      data-column-id={id}\r\n      ref={setNodeRef} // Attach droppable ref here\r\n      className={`kanban-column ${isOver ? 'drop-active' : ''}`}\r\n    >\r\n      <div className=\"kanban-column-header\">\r\n        <h3 className=\"kanban-column-title\">{title}</h3>\r\n        <span className=\"task-count\">{taskIds.length}</span>\r\n      </div>\r\n\r\n      {/* SortableContext needs the ref from useDroppable to define the container */}\r\n      <SortableContext\r\n         items={taskIds} // Use only IDs for SortableContext\r\n         strategy={verticalListSortingStrategy}\r\n         id={id} // Pass the plain column id as the context id\r\n      >\r\n        {/* This div receives the layout styles potentially applied by SortableContext */}\r\n        <div className=\"kanban-column-content\">\r\n          {columnTasks.length === 0 ? (\r\n            <div className=\"empty-column\">\r\n              <p>Drag tasks here or add new ones</p> {/* Updated placeholder */}\r\n            </div>\r\n          ) : (\r\n            columnTasks.map(task => (\r\n              <SortableTask\r\n                key={task._id || task.id}\r\n                id={task._id || task.id} // Pass the task's unique ID\r\n                task={task}\r\n                onEdit={() => onEdit(task)} // Pass original task object\r\n                onDelete={() => onDelete(task._id || task.id)} // Pass task ID\r\n              />\r\n            ))\r\n          )}\r\n        </div>\r\n      </SortableContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanColumn;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}