{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\todo list\\\\frontend\\\\src\\\\components\\\\TaskKanban.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { DndContext, PointerSensor, useSensor, useSensors, DragOverlay, closestCorners, KeyboardSensor } from '@dnd-kit/core';\nimport { sortableKeyboardCoordinates, arrayMove } from '@dnd-kit/sortable';\nimport { restrictToWindowEdges, restrictToParentElement } from '@dnd-kit/modifiers';\nimport { useDroppable } from '@dnd-kit/core';\nimport { useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\n\n// Define the columns and their corresponding statuses\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TASK_STATUSES = {\n  BACKLOG: 'backlog',\n  ACTIVE: 'active',\n  UNDER_REVIEW: 'under-review',\n  COMPLETED: 'completed',\n  ARCHIVED: 'archived'\n};\nconst KANBAN_COLUMNS = {\n  backlog: {\n    id: 'backlog',\n    title: 'Backlog',\n    status: 'backlog',\n    icon: 'fa-inbox'\n  },\n  active: {\n    id: 'active',\n    title: 'Active',\n    status: 'active',\n    icon: 'fa-play'\n  },\n  'under-review': {\n    id: 'under-review',\n    title: 'Under Review',\n    status: 'under-review',\n    icon: 'fa-eye'\n  },\n  completed: {\n    id: 'completed',\n    title: 'Completed',\n    status: 'completed',\n    icon: 'fa-check'\n  }\n};\nconst TaskKanban = ({\n  tasks = [],\n  onEdit,\n  onDelete,\n  onStatusChange,\n  isLoading = false\n}) => {\n  _s();\n  const [columns, setColumns] = useState(() => {\n    // Initialize columns with empty taskIds arrays\n    const initialCols = {};\n    Object.values(KANBAN_COLUMNS).forEach(colInfo => {\n      initialCols[colInfo.id] = {\n        ...colInfo,\n        taskIds: []\n      };\n    });\n    return initialCols;\n  });\n  const [activeTask, setActiveTask] = useState(null);\n  const [dragOverColumn, setDragOverColumn] = useState(null);\n\n  // Group tasks into columns when tasks prop changes\n  useEffect(() => {\n    const newColumns = {};\n    Object.values(KANBAN_COLUMNS).forEach(colInfo => {\n      newColumns[colInfo.id] = {\n        ...colInfo,\n        taskIds: []\n      };\n    });\n    tasks.forEach(task => {\n      var _Object$values$find;\n      const taskId = task._id || task.id;\n      const taskStatus = task.status || 'active';\n      const targetColumnId = ((_Object$values$find = Object.values(KANBAN_COLUMNS).find(c => c.status === taskStatus)) === null || _Object$values$find === void 0 ? void 0 : _Object$values$find.id) || 'active';\n      if (newColumns[targetColumnId]) {\n        if (!newColumns[targetColumnId].taskIds.includes(taskId)) {\n          newColumns[targetColumnId].taskIds.push(taskId);\n        }\n      } else {\n        if (!newColumns.active.taskIds.includes(taskId)) {\n          newColumns.active.taskIds.push(taskId);\n        }\n      }\n    });\n    setColumns(newColumns);\n  }, [tasks]);\n\n  // Find task by ID helper (memoized)\n  const getTaskById = useCallback(id => {\n    return tasks.find(task => (task._id || task.id) === id);\n  }, [tasks]);\n\n  // Setup sensors for drag detection\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 8\n    }\n  }), useSensor(KeyboardSensor, {\n    coordinateGetter: sortableKeyboardCoordinates\n  }));\n  const findColumnContainingTask = taskId => {\n    if (!taskId) return null;\n    return Object.values(columns).find(column => column.taskIds.includes(taskId));\n  };\n  const handleDragStart = event => {\n    const {\n      active\n    } = event;\n    const task = getTaskById(active.id);\n    setActiveTask(task);\n  };\n  const handleDragOver = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (!over || !active) return;\n    const activeId = active.id;\n    const overId = over.id;\n    if (activeId === overId) return;\n    const activeColumn = findColumnContainingTask(activeId);\n\n    // Determine target column\n    let overColumn = null;\n    if (overId.toString().startsWith('column:')) {\n      const columnId = overId.toString().replace('column:', '');\n      overColumn = columns[columnId];\n    } else {\n      overColumn = findColumnContainingTask(overId);\n    }\n    if (!activeColumn || !overColumn) return;\n    if (activeColumn.id === overColumn.id) return; // Same column, don't do anything here\n\n    setDragOverColumn(overColumn.id);\n\n    // Move task between columns\n    setColumns(prev => {\n      const sourceItems = [...prev[activeColumn.id].taskIds];\n      const destItems = [...prev[overColumn.id].taskIds];\n\n      // Remove from source\n      const activeIndex = sourceItems.indexOf(activeId);\n      if (activeIndex !== -1) {\n        sourceItems.splice(activeIndex, 1);\n      }\n\n      // Add to destination (at the end for now)\n      if (!destItems.includes(activeId)) {\n        destItems.push(activeId);\n      }\n      return {\n        ...prev,\n        [activeColumn.id]: {\n          ...prev[activeColumn.id],\n          taskIds: sourceItems\n        },\n        [overColumn.id]: {\n          ...prev[overColumn.id],\n          taskIds: destItems\n        }\n      };\n    });\n  };\n  const handleDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    setActiveTask(null);\n    setDragOverColumn(null);\n    if (!over) return;\n    const activeId = active.id;\n    const overId = over.id;\n    const activeColumn = findColumnContainingTask(activeId);\n    let overColumn = null;\n    if (overId.toString().startsWith('column:')) {\n      const columnId = overId.toString().replace('column:', '');\n      overColumn = columns[columnId];\n    } else {\n      overColumn = findColumnContainingTask(overId);\n    }\n    if (!activeColumn || !overColumn) return;\n\n    // If moved to different column, trigger status change\n    if (activeColumn.id !== overColumn.id) {\n      var _KANBAN_COLUMNS$overC;\n      const newStatus = ((_KANBAN_COLUMNS$overC = KANBAN_COLUMNS[overColumn.id]) === null || _KANBAN_COLUMNS$overC === void 0 ? void 0 : _KANBAN_COLUMNS$overC.status) || 'active';\n      console.log(`Task ${activeId} moved from ${activeColumn.id} to ${overColumn.id}. New status: ${newStatus}`);\n      onStatusChange(activeId, newStatus);\n    } else {\n      // Same column reordering\n      const taskIds = columns[activeColumn.id].taskIds;\n      const oldIndex = taskIds.indexOf(activeId);\n      const newIndex = taskIds.indexOf(overId);\n      if (oldIndex !== newIndex && oldIndex !== -1 && newIndex !== -1) {\n        setColumns(prev => ({\n          ...prev,\n          [activeColumn.id]: {\n            ...prev[activeColumn.id],\n            taskIds: arrayMove(taskIds, oldIndex, newIndex)\n          }\n        }));\n      }\n    }\n  };\n\n  // Format date helper\n  const formatDate = dateString => {\n    if (!dateString) return '';\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  // Get priority class helper\n  const getPriorityClass = priority => {\n    switch (priority === null || priority === void 0 ? void 0 : priority.toLowerCase()) {\n      case 'high':\n        return 'priority-high';\n      case 'medium':\n        return 'priority-medium';\n      case 'low':\n        return 'priority-low';\n      default:\n        return 'priority-default';\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-spinner fa-spin fa-2x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading tasks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    sensors: sensors,\n    collisionDetection: closestCorners,\n    onDragStart: handleDragStart,\n    onDragOver: handleDragOver,\n    onDragEnd: handleDragEnd,\n    modifiers: [restrictToWindowEdges, restrictToParentElement],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-board\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-columns\",\n        children: Object.values(columns).map(column => /*#__PURE__*/_jsxDEV(KanbanColumn, {\n          column: column,\n          tasks: tasks,\n          getTaskById: getTaskById,\n          onEdit: onEdit,\n          onDelete: onDelete,\n          formatDate: formatDate,\n          getPriorityClass: getPriorityClass,\n          isDragOver: dragOverColumn === column.id\n        }, column.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragOverlay, {\n      children: activeTask ? /*#__PURE__*/_jsxDEV(TaskCard, {\n        task: activeTask,\n        formatDate: formatDate,\n        getPriorityClass: getPriorityClass,\n        onEdit: () => {},\n        onDelete: () => {},\n        isOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .kanban-board {\n          width: 100%;\n          height: 100%;\n          overflow-x: auto;\n          padding: 1rem;\n        }\n\n        .kanban-columns {\n          display: flex;\n          gap: 1.5rem;\n          min-width: fit-content;\n          height: calc(100vh - 300px);\n          min-height: 500px;\n        }\n\n        .kanban-loading {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: center;\n          height: 300px;\n          color: #6c757d;\n        }\n\n        .kanban-loading i {\n          margin-bottom: 1rem;\n        }\n\n        @media (max-width: 768px) {\n          .kanban-columns {\n            flex-direction: column;\n            height: auto;\n          }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n};\n\n// Separate KanbanColumn component\n_s(TaskKanban, \"7mPLuZP0wO6bS6wFhi87WlybyAE=\", false, function () {\n  return [useSensors, useSensor, useSensor];\n});\n_c = TaskKanban;\nconst KanbanColumn = ({\n  column,\n  tasks,\n  getTaskById,\n  onEdit,\n  onDelete,\n  formatDate,\n  getPriorityClass,\n  isDragOver\n}) => {\n  const columnTasks = column.taskIds.map(taskId => getTaskById(taskId)).filter(Boolean);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `kanban-column ${isDragOver ? 'drag-over' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"column-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: `fa ${column.icon}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), column.title, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-count\",\n          children: [\"(\", columnTasks.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DroppableColumn, {\n      columnId: column.id,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-content\",\n        children: columnTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-folder-open-o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this), isDragOver && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"drop-hint\",\n            children: \"Drop task here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-list\",\n          children: [columnTasks.map(task => /*#__PURE__*/_jsxDEV(DraggableTask, {\n            task: task,\n            formatDate: formatDate,\n            getPriorityClass: getPriorityClass,\n            onEdit: onEdit,\n            onDelete: onDelete\n          }, task._id || task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this)), isDragOver && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"drop-zone\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-plus-circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Drop here to move to \", column.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .kanban-column {\n          flex: 1;\n          min-width: 280px;\n          background: #f8f9fa;\n          border-radius: 8px;\n          border: 2px solid transparent;\n          transition: all 0.2s ease;\n          display: flex;\n          flex-direction: column;\n        }\n\n        .kanban-column.drag-over {\n          border-color: #007bff;\n          background: #e3f2fd;\n          transform: scale(1.02);\n        }\n\n        .column-header {\n          padding: 1rem;\n          background: #fff;\n          border-radius: 8px 8px 0 0;\n          border-bottom: 1px solid #e9ecef;\n        }\n\n        .column-title {\n          margin: 0;\n          font-size: 1.1rem;\n          font-weight: 600;\n          color: #343a40;\n          display: flex;\n          align-items: center;\n          gap: 0.5rem;\n        }\n\n        .task-count {\n          background: #6c757d;\n          color: white;\n          padding: 0.2rem 0.5rem;\n          border-radius: 12px;\n          font-size: 0.8rem;\n          font-weight: 500;\n          margin-left: auto;\n        }\n\n        .column-content {\n          flex: 1;\n          padding: 1rem;\n          overflow-y: auto;\n        }\n\n        .task-list {\n          display: flex;\n          flex-direction: column;\n          gap: 1rem;\n          min-height: 100px;\n        }\n\n        .empty-column {\n          text-align: center;\n          color: #6c757d;\n          padding: 2rem 1rem;\n        }\n\n        .empty-column i {\n          font-size: 2rem;\n          margin-bottom: 0.5rem;\n          opacity: 0.5;\n        }\n\n        .empty-column p {\n          margin: 0;\n        }\n\n        .drop-hint {\n          color: #007bff;\n          font-weight: 600;\n          margin-top: 0.5rem;\n        }\n\n        .drop-zone {\n          background: #e3f2fd;\n          border: 2px dashed #007bff;\n          border-radius: 8px;\n          padding: 1rem;\n          text-align: center;\n          color: #007bff;\n          font-weight: 600;\n          margin-top: 1rem;\n        }\n\n        .drop-zone i {\n          margin-right: 0.5rem;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n};\n\n// Droppable column wrapper\n_c2 = KanbanColumn;\nconst DroppableColumn = ({\n  columnId,\n  children\n}) => {\n  _s2();\n  const {\n    isOver,\n    setNodeRef\n  } = useDroppable({\n    id: `column:${columnId}`,\n    data: {\n      type: 'column',\n      columnId: columnId\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    className: isOver ? 'droppable-over' : '',\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 458,\n    columnNumber: 5\n  }, this);\n};\n\n// Draggable task wrapper\n_s2(DroppableColumn, \"fT702R7NW3L8KUJObOwGrnMsXMQ=\", false, function () {\n  return [useDroppable];\n});\n_c3 = DroppableColumn;\nconst DraggableTask = ({\n  task,\n  formatDate,\n  getPriorityClass,\n  onEdit,\n  onDelete\n}) => {\n  _s3();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({\n    id: task._id || task.id,\n    data: {\n      type: 'task',\n      task: task\n    }\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    ...attributes,\n    ...listeners,\n    className: isDragging ? 'task-dragging' : '',\n    children: /*#__PURE__*/_jsxDEV(TaskCard, {\n      task: task,\n      formatDate: formatDate,\n      getPriorityClass: getPriorityClass,\n      onEdit: onEdit,\n      onDelete: onDelete,\n      isDragging: isDragging\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 487,\n    columnNumber: 5\n  }, this);\n};\n\n// Task card component\n_s3(DraggableTask, \"V3M7/V83udwZW8GPiodMh2TFy/I=\", false, function () {\n  return [useSortable];\n});\n_c4 = DraggableTask;\nconst TaskCard = ({\n  task,\n  formatDate,\n  getPriorityClass,\n  onEdit,\n  onDelete,\n  isDragging = false,\n  isOverlay = false\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `task-card ${isDragging ? 'task-item-dragging' : ''} ${isOverlay ? 'task-overlay' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-card-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"task-title\",\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"task-action-btn edit-btn\",\n          onClick: e => {\n            e.stopPropagation();\n            onEdit(task);\n          },\n          \"aria-label\": `Edit ${task.title}`,\n          title: \"Edit task\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"task-action-btn delete-btn\",\n          onClick: e => {\n            e.stopPropagation();\n            onDelete(task._id || task.id);\n          },\n          \"aria-label\": `Delete ${task.title}`,\n          title: \"Delete task\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-trash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }, this), task.description && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"task-description\",\n      children: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-meta\",\n      children: [task.category && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"task-category\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-tag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 13\n        }, this), \" \", task.category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 11\n      }, this), task.priority && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `task-priority ${getPriorityClass(task.priority)}`,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-flag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 13\n        }, this), \" \", task.priority]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 11\n      }, this), task.dueDate && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"task-due-date\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 13\n        }, this), \" \", formatDate(task.dueDate)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .task-card {\n          background: white;\n          border-radius: 8px;\n          padding: 1rem;\n          border: 1px solid #e9ecef;\n          cursor: grab;\n          transition: all 0.2s ease;\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        }\n\n        .task-card:hover {\n          transform: translateY(-2px);\n          box-shadow: 0 4px 8px rgba(0,0,0,0.15);\n        }\n\n        .task-card:active {\n          cursor: grabbing;\n        }\n\n        .task-item-dragging {\n          box-shadow: 0 8px 24px rgba(0,0,0,0.3) !important;\n          transform: rotate(2deg) !important;\n          opacity: 0.8;\n          z-index: 1000;\n        }\n\n        .task-overlay {\n          transform: rotate(5deg) !important;\n          box-shadow: 0 10px 30px rgba(0,0,0,0.4) !important;\n        }\n\n        .task-card-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: flex-start;\n          margin-bottom: 0.5rem;\n        }\n\n        .task-title {\n          margin: 0;\n          font-size: 1rem;\n          font-weight: 600;\n          color: #343a40;\n          flex: 1;\n          margin-right: 0.5rem;\n        }\n\n        .task-actions {\n          display: flex;\n          gap: 0.25rem;\n        }\n\n        .task-action-btn {\n          background: none;\n          border: none;\n          color: #6c757d;\n          cursor: pointer;\n          padding: 0.25rem;\n          border-radius: 4px;\n          transition: all 0.2s ease;\n        }\n\n        .task-action-btn:hover {\n          background: #f8f9fa;\n          color: #343a40;\n        }\n\n        .edit-btn:hover {\n          color: #007bff;\n        }\n\n        .delete-btn:hover {\n          color: #dc3545;\n        }\n\n        .task-description {\n          margin: 0.5rem 0;\n          color: #6c757d;\n          font-size: 0.9rem;\n          line-height: 1.4;\n        }\n\n        .task-meta {\n          display: flex;\n          flex-wrap: wrap;\n          gap: 0.5rem;\n          margin-top: 0.75rem;\n        }\n\n        .task-meta span {\n          font-size: 0.8rem;\n          padding: 0.2rem 0.5rem;\n          border-radius: 12px;\n          display: flex;\n          align-items: center;\n          gap: 0.25rem;\n        }\n\n        .task-category {\n          background: #e3f2fd;\n          color: #1976d2;\n        }\n\n        .task-priority {\n          font-weight: 500;\n        }\n\n        .priority-high {\n          background: #ffebee;\n          color: #d32f2f;\n        }\n\n        .priority-medium {\n          background: #fff3e0;\n          color: #f57c00;\n        }\n\n        .priority-low {\n          background: #e8f5e8;\n          color: #388e3c;\n        }\n\n        .priority-default {\n          background: #f5f5f5;\n          color: #757575;\n        }\n\n        .task-due-date {\n          background: #f3e5f5;\n          color: #7b1fa2;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 509,\n    columnNumber: 5\n  }, this);\n};\n_c5 = TaskCard;\nexport default TaskKanban;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"TaskKanban\");\n$RefreshReg$(_c2, \"KanbanColumn\");\n$RefreshReg$(_c3, \"DroppableColumn\");\n$RefreshReg$(_c4, \"DraggableTask\");\n$RefreshReg$(_c5, \"TaskCard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","DndContext","PointerSensor","useSensor","useSensors","DragOverlay","closestCorners","KeyboardSensor","sortableKeyboardCoordinates","arrayMove","restrictToWindowEdges","restrictToParentElement","useDroppable","useSortable","CSS","jsxDEV","_jsxDEV","TASK_STATUSES","BACKLOG","ACTIVE","UNDER_REVIEW","COMPLETED","ARCHIVED","KANBAN_COLUMNS","backlog","id","title","status","icon","active","completed","TaskKanban","tasks","onEdit","onDelete","onStatusChange","isLoading","_s","columns","setColumns","initialCols","Object","values","forEach","colInfo","taskIds","activeTask","setActiveTask","dragOverColumn","setDragOverColumn","newColumns","task","_Object$values$find","taskId","_id","taskStatus","targetColumnId","find","c","includes","push","getTaskById","sensors","activationConstraint","distance","coordinateGetter","findColumnContainingTask","column","handleDragStart","event","handleDragOver","over","activeId","overId","activeColumn","overColumn","toString","startsWith","columnId","replace","prev","sourceItems","destItems","activeIndex","indexOf","splice","handleDragEnd","_KANBAN_COLUMNS$overC","newStatus","console","log","oldIndex","newIndex","formatDate","dateString","Date","toLocaleDateString","getPriorityClass","priority","toLowerCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","collisionDetection","onDragStart","onDragOver","onDragEnd","modifiers","map","KanbanColumn","isDragOver","TaskCard","isOverlay","jsx","_c","columnTasks","filter","Boolean","length","DroppableColumn","DraggableTask","_c2","_s2","isOver","setNodeRef","data","type","ref","_c3","_s3","attributes","listeners","transform","transition","isDragging","style","Transform","_c4","onClick","e","stopPropagation","description","category","dueDate","_c5","$RefreshReg$"],"sources":["D:/Projects/todo list/frontend/src/components/TaskKanban.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport {\r\n  DndContext,\r\n  PointerSensor,\r\n  useSensor,\r\n  useSensors,\r\n  DragOverlay,\r\n  closestCorners,\r\n  KeyboardSensor\r\n} from '@dnd-kit/core';\r\nimport { sortableKeyboardCoordinates, arrayMove } from '@dnd-kit/sortable';\r\nimport { restrictToWindowEdges, restrictToParentElement } from '@dnd-kit/modifiers';\r\nimport { useDroppable } from '@dnd-kit/core';\r\nimport { useSortable } from '@dnd-kit/sortable';\r\nimport { CSS } from '@dnd-kit/utilities';\r\n\r\n\r\n// Define the columns and their corresponding statuses\r\nconst TASK_STATUSES = {\r\n  BACKLOG: 'backlog',\r\n  ACTIVE: 'active',\r\n  UNDER_REVIEW: 'under-review',\r\n  COMPLETED: 'completed',\r\n  ARCHIVED: 'archived',\r\n};\r\n\r\nconst KANBAN_COLUMNS = {\r\n  backlog: { id: 'backlog', title: 'Backlog', status: 'backlog', icon: 'fa-inbox' },\r\n  active: { id: 'active', title: 'Active', status: 'active', icon: 'fa-play' },\r\n  'under-review': { id: 'under-review', title: 'Under Review', status: 'under-review', icon: 'fa-eye' },\r\n  completed: { id: 'completed', title: 'Completed', status: 'completed', icon: 'fa-check' },\r\n};\r\n\r\nconst TaskKanban = ({ tasks = [], onEdit, onDelete, onStatusChange, isLoading = false }) => {\r\n  const [columns, setColumns] = useState(() => {\r\n    // Initialize columns with empty taskIds arrays\r\n    const initialCols = {};\r\n    Object.values(KANBAN_COLUMNS).forEach(colInfo => {\r\n      initialCols[colInfo.id] = { ...colInfo, taskIds: [] };\r\n    });\r\n    return initialCols;\r\n  });\r\n  const [activeTask, setActiveTask] = useState(null);\r\n  const [dragOverColumn, setDragOverColumn] = useState(null);\r\n\r\n  // Group tasks into columns when tasks prop changes\r\n  useEffect(() => {\r\n    const newColumns = {};\r\n    Object.values(KANBAN_COLUMNS).forEach(colInfo => {\r\n      newColumns[colInfo.id] = { ...colInfo, taskIds: [] };\r\n    });\r\n\r\n    tasks.forEach(task => {\r\n      const taskId = task._id || task.id;\r\n      const taskStatus = task.status || 'active';\r\n      const targetColumnId = Object.values(KANBAN_COLUMNS).find(c => c.status === taskStatus)?.id || 'active';\r\n\r\n      if (newColumns[targetColumnId]) {\r\n        if (!newColumns[targetColumnId].taskIds.includes(taskId)) {\r\n          newColumns[targetColumnId].taskIds.push(taskId);\r\n        }\r\n      } else {\r\n        if (!newColumns.active.taskIds.includes(taskId)) {\r\n          newColumns.active.taskIds.push(taskId);\r\n        }\r\n      }\r\n    });\r\n\r\n    setColumns(newColumns);\r\n  }, [tasks]);\r\n\r\n  // Find task by ID helper (memoized)\r\n  const getTaskById = useCallback((id) => {\r\n    return tasks.find(task => (task._id || task.id) === id);\r\n  }, [tasks]);\r\n\r\n  // Setup sensors for drag detection\r\n  const sensors = useSensors(\r\n    useSensor(PointerSensor, {\r\n      activationConstraint: {\r\n        distance: 8,\r\n      },\r\n    }),\r\n    useSensor(KeyboardSensor, {\r\n      coordinateGetter: sortableKeyboardCoordinates,\r\n    })\r\n  );\r\n\r\n  const findColumnContainingTask = (taskId) => {\r\n    if (!taskId) return null;\r\n    return Object.values(columns).find(column => column.taskIds.includes(taskId));\r\n  };\r\n\r\n  const handleDragStart = (event) => {\r\n    const { active } = event;\r\n    const task = getTaskById(active.id);\r\n    setActiveTask(task);\r\n  };\r\n\r\n  \r\n\r\n  const handleDragOver = (event) => {\r\n  const { active, over } = event;\r\n  if (!over || !active) return;\r\n\r\n  const activeId = active.id;\r\n  const overId = over.id;\r\n\r\n  if (activeId === overId) return;\r\n\r\n  const activeColumn = findColumnContainingTask(activeId);\r\n  \r\n  // Determine target column\r\n  let overColumn = null;\r\n  if (overId.toString().startsWith('column:')) {\r\n    const columnId = overId.toString().replace('column:', '');\r\n    overColumn = columns[columnId];\r\n  } else {\r\n    overColumn = findColumnContainingTask(overId);\r\n  }\r\n\r\n  if (!activeColumn || !overColumn) return;\r\n  if (activeColumn.id === overColumn.id) return; // Same column, don't do anything here\r\n\r\n  setDragOverColumn(overColumn.id);\r\n\r\n  // Move task between columns\r\n  setColumns(prev => {\r\n    const sourceItems = [...prev[activeColumn.id].taskIds];\r\n    const destItems = [...prev[overColumn.id].taskIds];\r\n\r\n    // Remove from source\r\n    const activeIndex = sourceItems.indexOf(activeId);\r\n    if (activeIndex !== -1) {\r\n      sourceItems.splice(activeIndex, 1);\r\n    }\r\n\r\n    // Add to destination (at the end for now)\r\n    if (!destItems.includes(activeId)) {\r\n      destItems.push(activeId);\r\n    }\r\n\r\n    return {\r\n      ...prev,\r\n      [activeColumn.id]: { ...prev[activeColumn.id], taskIds: sourceItems },\r\n      [overColumn.id]: { ...prev[overColumn.id], taskIds: destItems },\r\n    };\r\n  });\r\n};\r\nconst handleDragEnd = (event) => {\r\n  const { active, over } = event;\r\n  setActiveTask(null);\r\n  setDragOverColumn(null);\r\n\r\n  if (!over) return;\r\n\r\n  const activeId = active.id;\r\n  const overId = over.id;\r\n\r\n  const activeColumn = findColumnContainingTask(activeId);\r\n  \r\n  let overColumn = null;\r\n  if (overId.toString().startsWith('column:')) {\r\n    const columnId = overId.toString().replace('column:', '');\r\n    overColumn = columns[columnId];\r\n  } else {\r\n    overColumn = findColumnContainingTask(overId);\r\n  }\r\n\r\n  if (!activeColumn || !overColumn) return;\r\n\r\n  // If moved to different column, trigger status change\r\n  if (activeColumn.id !== overColumn.id) {\r\n    const newStatus = KANBAN_COLUMNS[overColumn.id]?.status || 'active';\r\n    console.log(`Task ${activeId} moved from ${activeColumn.id} to ${overColumn.id}. New status: ${newStatus}`);\r\n    onStatusChange(activeId, newStatus);\r\n  } else {\r\n    // Same column reordering\r\n    const taskIds = columns[activeColumn.id].taskIds;\r\n    const oldIndex = taskIds.indexOf(activeId);\r\n    const newIndex = taskIds.indexOf(overId);\r\n\r\n    if (oldIndex !== newIndex && oldIndex !== -1 && newIndex !== -1) {\r\n      setColumns(prev => ({\r\n        ...prev,\r\n        [activeColumn.id]: {\r\n          ...prev[activeColumn.id],\r\n          taskIds: arrayMove(taskIds, oldIndex, newIndex),\r\n        },\r\n      }));\r\n    }\r\n  }\r\n};\r\n\r\n  // Format date helper\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return '';\r\n    return new Date(dateString).toLocaleDateString();\r\n  };\r\n\r\n  // Get priority class helper\r\n  const getPriorityClass = (priority) => {\r\n    switch (priority?.toLowerCase()) {\r\n      case 'high': return 'priority-high';\r\n      case 'medium': return 'priority-medium';\r\n      case 'low': return 'priority-low';\r\n      default: return 'priority-default';\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"kanban-loading\">\r\n        <i className=\"fa fa-spinner fa-spin fa-2x\"></i>\r\n        <p>Loading tasks...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DndContext\r\n      sensors={sensors}\r\n      collisionDetection={closestCorners}\r\n      onDragStart={handleDragStart}\r\n      onDragOver={handleDragOver}\r\n      onDragEnd={handleDragEnd}\r\n      modifiers={[restrictToWindowEdges, restrictToParentElement]}\r\n    >\r\n      <div className=\"kanban-board\">\r\n        <div className=\"kanban-columns\">\r\n          {Object.values(columns).map(column => (\r\n            <KanbanColumn\r\n              key={column.id}\r\n              column={column}\r\n              tasks={tasks}\r\n              getTaskById={getTaskById}\r\n              onEdit={onEdit}\r\n              onDelete={onDelete}\r\n              formatDate={formatDate}\r\n              getPriorityClass={getPriorityClass}\r\n              isDragOver={dragOverColumn === column.id}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <DragOverlay>\r\n        {activeTask ? (\r\n          <TaskCard\r\n            task={activeTask}\r\n            formatDate={formatDate}\r\n            getPriorityClass={getPriorityClass}\r\n            onEdit={() => {}}\r\n            onDelete={() => {}}\r\n            isOverlay={true}\r\n          />\r\n        ) : null}\r\n      </DragOverlay>\r\n\r\n      <style jsx>{`\r\n        .kanban-board {\r\n          width: 100%;\r\n          height: 100%;\r\n          overflow-x: auto;\r\n          padding: 1rem;\r\n        }\r\n\r\n        .kanban-columns {\r\n          display: flex;\r\n          gap: 1.5rem;\r\n          min-width: fit-content;\r\n          height: calc(100vh - 300px);\r\n          min-height: 500px;\r\n        }\r\n\r\n        .kanban-loading {\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center;\r\n          justify-content: center;\r\n          height: 300px;\r\n          color: #6c757d;\r\n        }\r\n\r\n        .kanban-loading i {\r\n          margin-bottom: 1rem;\r\n        }\r\n\r\n        @media (max-width: 768px) {\r\n          .kanban-columns {\r\n            flex-direction: column;\r\n            height: auto;\r\n          }\r\n        }\r\n      `}</style>\r\n    </DndContext>\r\n  );\r\n};\r\n\r\n// Separate KanbanColumn component\r\nconst KanbanColumn = ({ column, tasks, getTaskById, onEdit, onDelete, formatDate, getPriorityClass, isDragOver }) => {\r\n  const columnTasks = column.taskIds.map(taskId => getTaskById(taskId)).filter(Boolean);\r\n\r\n  return (\r\n    <div className={`kanban-column ${isDragOver ? 'drag-over' : ''}`}>\r\n      <div className=\"column-header\">\r\n        <h3 className=\"column-title\">\r\n          <i className={`fa ${column.icon}`}></i>\r\n          {column.title}\r\n          <span className=\"task-count\">({columnTasks.length})</span>\r\n        </h3>\r\n      </div>\r\n      \r\n      <DroppableColumn columnId={column.id}>\r\n        <div className=\"column-content\">\r\n          {columnTasks.length === 0 ? (\r\n            <div className=\"empty-column\">\r\n              <i className=\"fa fa-folder-open-o\"></i>\r\n              <p>No tasks</p>\r\n              {isDragOver && (\r\n                <p className=\"drop-hint\">Drop task here</p>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"task-list\">\r\n              {columnTasks.map(task => (\r\n                <DraggableTask\r\n                  key={task._id || task.id}\r\n                  task={task}\r\n                  formatDate={formatDate}\r\n                  getPriorityClass={getPriorityClass}\r\n                  onEdit={onEdit}\r\n                  onDelete={onDelete}\r\n                />\r\n              ))}\r\n              {isDragOver && (\r\n                <div className=\"drop-zone\">\r\n                  <i className=\"fa fa-plus-circle\"></i>\r\n                  <span>Drop here to move to {column.title}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </DroppableColumn>\r\n\r\n      <style jsx>{`\r\n        .kanban-column {\r\n          flex: 1;\r\n          min-width: 280px;\r\n          background: #f8f9fa;\r\n          border-radius: 8px;\r\n          border: 2px solid transparent;\r\n          transition: all 0.2s ease;\r\n          display: flex;\r\n          flex-direction: column;\r\n        }\r\n\r\n        .kanban-column.drag-over {\r\n          border-color: #007bff;\r\n          background: #e3f2fd;\r\n          transform: scale(1.02);\r\n        }\r\n\r\n        .column-header {\r\n          padding: 1rem;\r\n          background: #fff;\r\n          border-radius: 8px 8px 0 0;\r\n          border-bottom: 1px solid #e9ecef;\r\n        }\r\n\r\n        .column-title {\r\n          margin: 0;\r\n          font-size: 1.1rem;\r\n          font-weight: 600;\r\n          color: #343a40;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 0.5rem;\r\n        }\r\n\r\n        .task-count {\r\n          background: #6c757d;\r\n          color: white;\r\n          padding: 0.2rem 0.5rem;\r\n          border-radius: 12px;\r\n          font-size: 0.8rem;\r\n          font-weight: 500;\r\n          margin-left: auto;\r\n        }\r\n\r\n        .column-content {\r\n          flex: 1;\r\n          padding: 1rem;\r\n          overflow-y: auto;\r\n        }\r\n\r\n        .task-list {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 1rem;\r\n          min-height: 100px;\r\n        }\r\n\r\n        .empty-column {\r\n          text-align: center;\r\n          color: #6c757d;\r\n          padding: 2rem 1rem;\r\n        }\r\n\r\n        .empty-column i {\r\n          font-size: 2rem;\r\n          margin-bottom: 0.5rem;\r\n          opacity: 0.5;\r\n        }\r\n\r\n        .empty-column p {\r\n          margin: 0;\r\n        }\r\n\r\n        .drop-hint {\r\n          color: #007bff;\r\n          font-weight: 600;\r\n          margin-top: 0.5rem;\r\n        }\r\n\r\n        .drop-zone {\r\n          background: #e3f2fd;\r\n          border: 2px dashed #007bff;\r\n          border-radius: 8px;\r\n          padding: 1rem;\r\n          text-align: center;\r\n          color: #007bff;\r\n          font-weight: 600;\r\n          margin-top: 1rem;\r\n        }\r\n\r\n        .drop-zone i {\r\n          margin-right: 0.5rem;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n// Droppable column wrapper\r\nconst DroppableColumn = ({ columnId, children }) => {\r\n  const { isOver, setNodeRef } = useDroppable({\r\n    id: `column:${columnId}`,\r\n    data: {\r\n      type: 'column',\r\n      columnId: columnId,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div ref={setNodeRef} className={isOver ? 'droppable-over' : ''}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Draggable task wrapper\r\nconst DraggableTask = ({ task, formatDate, getPriorityClass, onEdit, onDelete }) => {\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    transform,\r\n    transition,\r\n    isDragging,\r\n  } = useSortable({\r\n    id: task._id || task.id,\r\n    data: {\r\n      type: 'task',\r\n      task: task,\r\n    },\r\n  });\r\n\r\n  const style = {\r\n    transform: CSS.Transform.toString(transform),\r\n    transition,\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={setNodeRef}\r\n      style={style}\r\n      {...attributes}\r\n      {...listeners}\r\n      className={isDragging ? 'task-dragging' : ''}\r\n    >\r\n      <TaskCard\r\n        task={task}\r\n        formatDate={formatDate}\r\n        getPriorityClass={getPriorityClass}\r\n        onEdit={onEdit}\r\n        onDelete={onDelete}\r\n        isDragging={isDragging}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// Task card component\r\nconst TaskCard = ({ task, formatDate, getPriorityClass, onEdit, onDelete, isDragging = false, isOverlay = false }) => {\r\n  return (\r\n    <div className={`task-card ${isDragging ? 'task-item-dragging' : ''} ${isOverlay ? 'task-overlay' : ''}`}>\r\n      <div className=\"task-card-header\">\r\n        <h4 className=\"task-title\">{task.title}</h4>\r\n        <div className=\"task-actions\">\r\n          <button\r\n            className=\"task-action-btn edit-btn\"\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              onEdit(task);\r\n            }}\r\n            aria-label={`Edit ${task.title}`}\r\n            title=\"Edit task\"\r\n          >\r\n            <i className=\"fa fa-edit\"></i>\r\n          </button>\r\n          <button\r\n            className=\"task-action-btn delete-btn\"\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              onDelete(task._id || task.id);\r\n            }}\r\n            aria-label={`Delete ${task.title}`}\r\n            title=\"Delete task\"\r\n          >\r\n            <i className=\"fa fa-trash\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {task.description && (\r\n        <p className=\"task-description\">{task.description}</p>\r\n      )}\r\n      \r\n      <div className=\"task-meta\">\r\n        {task.category && (\r\n          <span className=\"task-category\">\r\n            <i className=\"fa fa-tag\"></i> {task.category}\r\n          </span>\r\n        )}\r\n        {task.priority && (\r\n          <span className={`task-priority ${getPriorityClass(task.priority)}`}>\r\n            <i className=\"fa fa-flag\"></i> {task.priority}\r\n          </span>\r\n        )}\r\n        {task.dueDate && (\r\n          <span className=\"task-due-date\">\r\n            <i className=\"fa fa-calendar\"></i> {formatDate(task.dueDate)}\r\n          </span>\r\n        )}\r\n      </div>\r\n\r\n      <style jsx>{`\r\n        .task-card {\r\n          background: white;\r\n          border-radius: 8px;\r\n          padding: 1rem;\r\n          border: 1px solid #e9ecef;\r\n          cursor: grab;\r\n          transition: all 0.2s ease;\r\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n        }\r\n\r\n        .task-card:hover {\r\n          transform: translateY(-2px);\r\n          box-shadow: 0 4px 8px rgba(0,0,0,0.15);\r\n        }\r\n\r\n        .task-card:active {\r\n          cursor: grabbing;\r\n        }\r\n\r\n        .task-item-dragging {\r\n          box-shadow: 0 8px 24px rgba(0,0,0,0.3) !important;\r\n          transform: rotate(2deg) !important;\r\n          opacity: 0.8;\r\n          z-index: 1000;\r\n        }\r\n\r\n        .task-overlay {\r\n          transform: rotate(5deg) !important;\r\n          box-shadow: 0 10px 30px rgba(0,0,0,0.4) !important;\r\n        }\r\n\r\n        .task-card-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: flex-start;\r\n          margin-bottom: 0.5rem;\r\n        }\r\n\r\n        .task-title {\r\n          margin: 0;\r\n          font-size: 1rem;\r\n          font-weight: 600;\r\n          color: #343a40;\r\n          flex: 1;\r\n          margin-right: 0.5rem;\r\n        }\r\n\r\n        .task-actions {\r\n          display: flex;\r\n          gap: 0.25rem;\r\n        }\r\n\r\n        .task-action-btn {\r\n          background: none;\r\n          border: none;\r\n          color: #6c757d;\r\n          cursor: pointer;\r\n          padding: 0.25rem;\r\n          border-radius: 4px;\r\n          transition: all 0.2s ease;\r\n        }\r\n\r\n        .task-action-btn:hover {\r\n          background: #f8f9fa;\r\n          color: #343a40;\r\n        }\r\n\r\n        .edit-btn:hover {\r\n          color: #007bff;\r\n        }\r\n\r\n        .delete-btn:hover {\r\n          color: #dc3545;\r\n        }\r\n\r\n        .task-description {\r\n          margin: 0.5rem 0;\r\n          color: #6c757d;\r\n          font-size: 0.9rem;\r\n          line-height: 1.4;\r\n        }\r\n\r\n        .task-meta {\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n          gap: 0.5rem;\r\n          margin-top: 0.75rem;\r\n        }\r\n\r\n        .task-meta span {\r\n          font-size: 0.8rem;\r\n          padding: 0.2rem 0.5rem;\r\n          border-radius: 12px;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 0.25rem;\r\n        }\r\n\r\n        .task-category {\r\n          background: #e3f2fd;\r\n          color: #1976d2;\r\n        }\r\n\r\n        .task-priority {\r\n          font-weight: 500;\r\n        }\r\n\r\n        .priority-high {\r\n          background: #ffebee;\r\n          color: #d32f2f;\r\n        }\r\n\r\n        .priority-medium {\r\n          background: #fff3e0;\r\n          color: #f57c00;\r\n        }\r\n\r\n        .priority-low {\r\n          background: #e8f5e8;\r\n          color: #388e3c;\r\n        }\r\n\r\n        .priority-default {\r\n          background: #f5f5f5;\r\n          color: #757575;\r\n        }\r\n\r\n        .task-due-date {\r\n          background: #f3e5f5;\r\n          color: #7b1fa2;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskKanban;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}