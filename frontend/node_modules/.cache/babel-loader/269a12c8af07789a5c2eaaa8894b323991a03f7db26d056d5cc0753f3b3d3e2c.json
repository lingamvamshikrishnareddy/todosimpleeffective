{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\todo list\\\\frontend\\\\src\\\\pages\\\\ForgotPasswordPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams, useHistory, useLocation } from 'react-router-dom';\nimport api from '../services/api';\n\n// Define support email centrally\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SUPPORT_EMAIL = 'lingamvamshikrishnareddy@gmail.com';\n\n// Helper component for the support link\nconst ContactSupportLink = () => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [\"Having trouble? \", /*#__PURE__*/_jsxDEV(\"a\", {\n    href: `mailto:${SUPPORT_EMAIL}`,\n    children: \"Contact Support\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 21\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this);\n_c = ContactSupportLink;\nconst PasswordResetPage = () => {\n  _s();\n  // --- States remain the same ---\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [tokenValid, setTokenValid] = useState(null); // null: initial, true: valid, false: invalid\n  const [validating, setValidating] = useState(false); // Renamed for clarity\n\n  // --- Hooks remain the same ---\n  const {\n    token\n  } = useParams();\n  const history = useHistory();\n  const location = useLocation(); // Kept in case needed later, though not directly used in logic now\n\n  // Determine which view to show based on token presence\n  const isResetView = !!token;\n\n  // --- useEffect for token validation remains the same ---\n  useEffect(() => {\n    // Only run if we are in the reset view (token exists)\n    if (isResetView) {\n      const validateToken = async () => {\n        setValidating(true); // Start validating\n        setError(null); // Clear previous errors\n        setTokenValid(null); // Reset validation status\n\n        try {\n          // Assume api.validateResetToken throws an error for invalid tokens\n          await api.validateResetToken(token);\n          setTokenValid(true); // Token is valid\n        } catch (err) {\n          var _err$response, _err$response$data;\n          console.error('Token validation error:', err);\n          setTokenValid(false); // Token is invalid\n          // Provide a user-friendly error message\n          setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'This password reset link is invalid or has expired.');\n        } finally {\n          setValidating(false); // Stop validating\n        }\n      };\n      validateToken();\n    } else {\n      // If not in reset view, ensure validation state is off\n      setValidating(false);\n      setTokenValid(null);\n    }\n    // Dependency array ensures this runs when `token` or `isResetView` changes\n  }, [token, isResetView]);\n\n  // --- Event Handlers remain mostly the same, added error logging ---\n  const handleForgotSubmit = async e => {\n    e.preventDefault();\n    setError(null); // Clear previous errors\n    setSuccess(false); // Reset success state\n    setLoading(true);\n    if (!email.trim()) {\n      setError('Email is required');\n      setLoading(false);\n      return; // Stop execution if validation fails\n    }\n    try {\n      await api.forgotPassword({\n        email\n      });\n      setSuccess(true); // Show success message\n      setEmail(''); // Clear the email field\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Forgot password error:', err);\n      const errorMessage = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message || 'Failed to process your request. Please try again.';\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleResetSubmit = async e => {\n    e.preventDefault();\n    setError(null); // Clear previous errors\n    setSuccess(false); // Reset success state\n    setLoading(true);\n\n    // Client-side validation\n    if (password.length < 8) {\n      setError('Password must be at least 8 characters long');\n      setLoading(false);\n      return;\n    }\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      setLoading(false);\n      return;\n    }\n    try {\n      await api.resetPassword({\n        token,\n        password\n      });\n      setSuccess(true); // Show success message\n      // Clear form fields\n      setPassword('');\n      setConfirmPassword('');\n\n      // Redirect to login after a delay\n      setTimeout(() => {\n        history.push('/login');\n      }, 3000); // 3-second delay\n    } catch (err) {\n      var _err$response3, _err$response3$data, _err$response4;\n      console.error('Reset password error:', err);\n      const errorMessage = ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message || 'Failed to reset password. Please try again.';\n      setError(errorMessage);\n      // Check if the error indicates the token is now invalid (e.g., expired after page load)\n      if (((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.status) === 400 || err.message.toLowerCase().includes('token')) {\n        setTokenValid(false); // Mark token as invalid based on API response\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- Render Logic ---\n\n  // 1. Show loading state while validating token\n  if (isResetView && validating) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container auth-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card auth-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"auth-title\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-state\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Validating your password reset link...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 2. Show error view if token is invalid (and not validating)\n  // Use `tokenValid === false` for explicit invalid state check\n  if (isResetView && tokenValid === false && !validating) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container auth-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card auth-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"auth-title\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), error &&\n        /*#__PURE__*/\n        // Show the specific error message\n        _jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Need to reset your password again? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/forgot-password\",\n              children: \"Request a new link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 51\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ContactSupportLink, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Or return to \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 3. Main View (Forgot Password or Reset Password Form/Success)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card auth-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"auth-title\",\n        children: isResetView ? 'Set New Password' : 'Forgot Password'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), error && !success &&\n      /*#__PURE__*/\n      // Only show submit errors if not in success state\n      _jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setError(null),\n          className: \"dismiss-error\",\n          \"aria-label\": \"Dismiss error\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ContactSupportLink, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this), success ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          children: isResetView ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u2705 Your password has been successfully reset!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Redirecting you to the login page shortly...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u2705 Password reset instructions sent!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Please check your email (\", email || 'provided address', \") and follow the link to reset your password.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"Return to Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: isResetView && tokenValid === true ?\n        /*#__PURE__*/\n        // Show reset form only if token is validated\n        _jsxDEV(\"form\", {\n          className: \"auth-form\",\n          onSubmit: handleResetSubmit,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"form-instructions\",\n            children: \"Please enter and confirm your new password below.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"New Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"password\",\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              disabled: loading,\n              className: \"form-input\",\n              placeholder: \"Enter new password\",\n              required: true,\n              minLength: 8 // HTML5 validation hint\n              ,\n              \"aria-describedby\": \"password-hint\" // Accessibility\n              ,\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              id: \"password-hint\",\n              className: \"form-hint\",\n              children: \"Must be at least 8 characters long.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirmPassword\",\n              children: \"Confirm New Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"confirmPassword\",\n              type: \"password\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value),\n              disabled: loading,\n              className: \"form-input\",\n              placeholder: \"Confirm new password\",\n              required: true,\n              minLength: 8\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button button-primary button-block\",\n            type: \"submit\",\n            disabled: loading || !password || !confirmPassword || password !== confirmPassword // Basic button disable\n            ,\n            children: loading ? 'Resetting...' : 'Set New Password'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-footer\",\n            children: [/*#__PURE__*/_jsxDEV(ContactSupportLink, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 22\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                children: \"Back to Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }, this) : !isResetView ?\n        /*#__PURE__*/\n        // Show forgot form if not in reset view\n        _jsxDEV(\"form\", {\n          className: \"auth-form\",\n          onSubmit: handleForgotSubmit,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"form-instructions\",\n            children: \"Enter your account's email address and we will send you a link to reset your password.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email Address:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"email\",\n              type: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              disabled: loading,\n              className: \"form-input\",\n              placeholder: \"e.g., yourname@example.com\",\n              required: true,\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button button-primary button-block\",\n            type: \"submit\",\n            disabled: loading || !email.trim() // Disable if loading or email empty\n            ,\n            children: loading ? 'Sending Link...' : 'Send Password Reset Link'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Remembered your password? \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                children: \"Login here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 48\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ContactSupportLink, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }, this) : null /* Should not happen if logic above is correct, but prevents rendering stale form */\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordResetPage, \"u8J45lr1L+qTv2wEWU77zgaE22k=\", false, function () {\n  return [useParams, useHistory, useLocation];\n});\n_c2 = PasswordResetPage;\nexport default PasswordResetPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"ContactSupportLink\");\n$RefreshReg$(_c2, \"PasswordResetPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","useHistory","useLocation","api","jsxDEV","_jsxDEV","Fragment","_Fragment","SUPPORT_EMAIL","ContactSupportLink","children","href","fileName","_jsxFileName","lineNumber","columnNumber","_c","PasswordResetPage","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","loading","setLoading","tokenValid","setTokenValid","validating","setValidating","token","history","location","isResetView","validateToken","validateResetToken","err","_err$response","_err$response$data","console","response","data","message","handleForgotSubmit","e","preventDefault","trim","forgotPassword","_err$response2","_err$response2$data","errorMessage","handleResetSubmit","length","resetPassword","setTimeout","push","_err$response3","_err$response3$data","_err$response4","status","toLowerCase","includes","className","to","onClick","onSubmit","noValidate","htmlFor","id","type","value","onChange","target","disabled","placeholder","required","minLength","autoFocus","_c2","$RefreshReg$"],"sources":["D:/Projects/todo list/frontend/src/pages/ForgotPasswordPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport api from '../services/api';\r\n\r\n// Define support email centrally\r\nconst SUPPORT_EMAIL = 'lingamvamshikrishnareddy@gmail.com';\r\n\r\n// Helper component for the support link\r\nconst ContactSupportLink = () => (\r\n  <p>\r\n    Having trouble? <a href={`mailto:${SUPPORT_EMAIL}`}>Contact Support</a>\r\n  </p>\r\n);\r\n\r\nconst PasswordResetPage = () => {\r\n  // --- States remain the same ---\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [tokenValid, setTokenValid] = useState(null); // null: initial, true: valid, false: invalid\r\n  const [validating, setValidating] = useState(false); // Renamed for clarity\r\n\r\n  // --- Hooks remain the same ---\r\n  const { token } = useParams();\r\n  const history = useHistory();\r\n  const location = useLocation(); // Kept in case needed later, though not directly used in logic now\r\n\r\n  // Determine which view to show based on token presence\r\n  const isResetView = !!token;\r\n\r\n  // --- useEffect for token validation remains the same ---\r\n  useEffect(() => {\r\n    // Only run if we are in the reset view (token exists)\r\n    if (isResetView) {\r\n      const validateToken = async () => {\r\n        setValidating(true); // Start validating\r\n        setError(null); // Clear previous errors\r\n        setTokenValid(null); // Reset validation status\r\n\r\n        try {\r\n          // Assume api.validateResetToken throws an error for invalid tokens\r\n          await api.validateResetToken(token);\r\n          setTokenValid(true); // Token is valid\r\n        } catch (err) {\r\n          console.error('Token validation error:', err);\r\n          setTokenValid(false); // Token is invalid\r\n          // Provide a user-friendly error message\r\n          setError(err.response?.data?.message || err.message || 'This password reset link is invalid or has expired.');\r\n        } finally {\r\n          setValidating(false); // Stop validating\r\n        }\r\n      };\r\n\r\n      validateToken();\r\n    } else {\r\n        // If not in reset view, ensure validation state is off\r\n        setValidating(false);\r\n        setTokenValid(null);\r\n    }\r\n    // Dependency array ensures this runs when `token` or `isResetView` changes\r\n  }, [token, isResetView]);\r\n\r\n  // --- Event Handlers remain mostly the same, added error logging ---\r\n  const handleForgotSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(null); // Clear previous errors\r\n    setSuccess(false); // Reset success state\r\n    setLoading(true);\r\n\r\n    if (!email.trim()) {\r\n      setError('Email is required');\r\n      setLoading(false);\r\n      return; // Stop execution if validation fails\r\n    }\r\n\r\n    try {\r\n      await api.forgotPassword({ email });\r\n      setSuccess(true); // Show success message\r\n      setEmail(''); // Clear the email field\r\n    } catch (err) {\r\n      console.error('Forgot password error:', err);\r\n      const errorMessage = err.response?.data?.message || err.message || 'Failed to process your request. Please try again.';\r\n      setError(errorMessage);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleResetSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(null); // Clear previous errors\r\n    setSuccess(false); // Reset success state\r\n    setLoading(true);\r\n\r\n    // Client-side validation\r\n    if (password.length < 8) {\r\n      setError('Password must be at least 8 characters long');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      setError('Passwords do not match');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await api.resetPassword({ token, password });\r\n      setSuccess(true); // Show success message\r\n      // Clear form fields\r\n      setPassword('');\r\n      setConfirmPassword('');\r\n\r\n      // Redirect to login after a delay\r\n      setTimeout(() => {\r\n        history.push('/login');\r\n      }, 3000); // 3-second delay\r\n\r\n    } catch (err) {\r\n      console.error('Reset password error:', err);\r\n      const errorMessage = err.response?.data?.message || err.message || 'Failed to reset password. Please try again.';\r\n      setError(errorMessage);\r\n       // Check if the error indicates the token is now invalid (e.g., expired after page load)\r\n      if (err.response?.status === 400 || err.message.toLowerCase().includes('token')) {\r\n         setTokenValid(false); // Mark token as invalid based on API response\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // --- Render Logic ---\r\n\r\n  // 1. Show loading state while validating token\r\n  if (isResetView && validating) {\r\n    return (\r\n      <div className=\"container auth-container\">\r\n        <div className=\"card auth-card\">\r\n          <h1 className=\"auth-title\">Reset Password</h1>\r\n          <div className=\"loading-state\">\r\n            <p>Validating your password reset link...</p>\r\n            {/* Optional: Add a spinner animation here */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 2. Show error view if token is invalid (and not validating)\r\n  // Use `tokenValid === false` for explicit invalid state check\r\n  if (isResetView && tokenValid === false && !validating) {\r\n    return (\r\n      <div className=\"container auth-container\">\r\n        <div className=\"card auth-card\">\r\n          <h1 className=\"auth-title\">Reset Password</h1>\r\n          {error && ( // Show the specific error message\r\n            <div className=\"error-message\">\r\n              <p>{error}</p>\r\n            </div>\r\n          )}\r\n          <div className=\"auth-footer\">\r\n            <p>Need to reset your password again? <Link to=\"/forgot-password\">Request a new link</Link>.</p>\r\n            <ContactSupportLink /> {/* Added Contact Support Link */}\r\n            <p>Or return to <Link to=\"/login\">Login</Link>.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 3. Main View (Forgot Password or Reset Password Form/Success)\r\n  return (\r\n    <div className=\"container auth-container\">\r\n      <div className=\"card auth-card\">\r\n        <h1 className=\"auth-title\">{isResetView ? 'Set New Password' : 'Forgot Password'}</h1>\r\n\r\n        {/* General Error Display Area (for API errors during submit, etc.) */}\r\n        {error && !success && ( // Only show submit errors if not in success state\r\n            <div className=\"error-message\">\r\n                <p>{error}</p>\r\n                <button onClick={() => setError(null)} className=\"dismiss-error\" aria-label=\"Dismiss error\">×</button>\r\n                {/* Also offer support for general errors */}\r\n                <ContactSupportLink />\r\n            </div>\r\n        )}\r\n\r\n        {/* Success Message Area */}\r\n        {success ? (\r\n          <div className=\"success-container\">\r\n            <div className=\"success-message\">\r\n              {isResetView ? (\r\n                <>\r\n                  <p>✅ Your password has been successfully reset!</p>\r\n                  <p>Redirecting you to the login page shortly...</p>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <p>✅ Password reset instructions sent!</p>\r\n                  <p>Please check your email ({email || 'provided address'}) and follow the link to reset your password.</p>\r\n                </>\r\n              )}\r\n            </div>\r\n            <div className=\"auth-footer\">\r\n              <p><Link to=\"/login\">Return to Login</Link></p>\r\n              {/* Optional: Add support link here too if desired */}\r\n              {/* <ContactSupportLink /> */}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {/* Conditional Form Rendering */}\r\n            {isResetView && tokenValid === true ? ( // Show reset form only if token is validated\r\n              <form className=\"auth-form\" onSubmit={handleResetSubmit} noValidate>\r\n                <p className=\"form-instructions\">\r\n                  Please enter and confirm your new password below.\r\n                </p>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">New Password:</label>\r\n                  <input\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    disabled={loading}\r\n                    className=\"form-input\"\r\n                    placeholder=\"Enter new password\"\r\n                    required\r\n                    minLength={8} // HTML5 validation hint\r\n                    aria-describedby=\"password-hint\" // Accessibility\r\n                    autoFocus\r\n                  />\r\n                  <small id=\"password-hint\" className=\"form-hint\">Must be at least 8 characters long.</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"confirmPassword\">Confirm New Password:</label>\r\n                  <input\r\n                    id=\"confirmPassword\"\r\n                    type=\"password\"\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    disabled={loading}\r\n                    className=\"form-input\"\r\n                    placeholder=\"Confirm new password\"\r\n                    required\r\n                    minLength={8}\r\n                  />\r\n                </div>\r\n\r\n                <button\r\n                  className=\"button button-primary button-block\"\r\n                  type=\"submit\"\r\n                  disabled={loading || !password || !confirmPassword || password !== confirmPassword} // Basic button disable\r\n                >\r\n                  {loading ? 'Resetting...' : 'Set New Password'}\r\n                </button>\r\n                 <div className=\"auth-footer\">\r\n                     <ContactSupportLink /> {/* Added Contact Support Link */}\r\n                     <p><Link to=\"/login\">Back to Login</Link></p>\r\n                 </div>\r\n              </form>\r\n            ) : !isResetView ? ( // Show forgot form if not in reset view\r\n              <form className=\"auth-form\" onSubmit={handleForgotSubmit} noValidate>\r\n                <p className=\"form-instructions\">\r\n                  Enter your account's email address and we will send you a link to reset your password.\r\n                </p>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email Address:</label>\r\n                  <input\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    disabled={loading}\r\n                    className=\"form-input\"\r\n                    placeholder=\"e.g., yourname@example.com\"\r\n                    required\r\n                    autoFocus\r\n                  />\r\n                </div>\r\n\r\n                <button\r\n                  className=\"button button-primary button-block\"\r\n                  type=\"submit\"\r\n                  disabled={loading || !email.trim()} // Disable if loading or email empty\r\n                >\r\n                  {loading ? 'Sending Link...' : 'Send Password Reset Link'}\r\n                </button>\r\n\r\n                <div className=\"auth-footer\">\r\n                  <p>Remembered your password? <Link to=\"/login\">Login here</Link></p>\r\n                  <ContactSupportLink /> {/* Added Contact Support Link */}\r\n                </div>\r\n              </form>\r\n            ) : null /* Should not happen if logic above is correct, but prevents rendering stale form */}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordResetPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}