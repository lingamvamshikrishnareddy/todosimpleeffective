{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\todo list\\\\frontend\\\\src\\\\components\\\\TaskKanban.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport './TaskKanban.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskKanban = ({\n  tasks,\n  onStatusChange,\n  onEdit,\n  onDelete\n}) => {\n  _s();\n  // Initialize columns with the proper structure\n  const [columns, setColumns] = useState({\n    'backlog': {\n      name: 'Backlog',\n      items: []\n    },\n    'active': {\n      name: 'In Progress',\n      items: []\n    },\n    'review': {\n      name: 'Under Review',\n      items: []\n    },\n    'completed': {\n      name: 'Completed',\n      items: []\n    }\n  });\n\n  // Prepare columns whenever tasks change\n  useEffect(() => {\n    const newColumns = {\n      'backlog': {\n        name: 'Backlog',\n        items: []\n      },\n      'active': {\n        name: 'In Progress',\n        items: []\n      },\n      'review': {\n        name: 'Under Review',\n        items: []\n      },\n      'completed': {\n        name: 'Completed',\n        items: []\n      }\n    };\n\n    // Distribute tasks into columns\n    tasks.forEach(task => {\n      const status = task.status || 'backlog';\n      if (newColumns[status]) {\n        newColumns[status].items.push(task);\n      } else {\n        // Default to backlog for any unrecognized status\n        newColumns.backlog.items.push(task);\n      }\n    });\n    setColumns(newColumns);\n  }, [tasks]);\n\n  // Handle drag end event\n  const onDragEnd = useCallback(result => {\n    if (!result.destination) return;\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n\n    // If dropped in the same column at the same position, do nothing\n    if (source.droppableId === destination.droppableId && source.index === destination.index) return;\n\n    // Get source and destination columns\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n\n    // Create copies of the item arrays\n    const sourceItems = [...sourceColumn.items];\n    const destItems = source.droppableId === destination.droppableId ? sourceItems : [...destColumn.items];\n\n    // Remove the item from source array\n    const [removed] = sourceItems.splice(source.index, 1);\n\n    // Insert the item into destination array\n    destItems.splice(destination.index, 0, removed);\n\n    // Update the state\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: {\n        ...destColumn,\n        items: destItems\n      }\n    });\n\n    // If the column changed, update the task status in the backend\n    if (source.droppableId !== destination.droppableId) {\n      onStatusChange(draggableId, destination.droppableId);\n    }\n  }, [columns, onStatusChange]);\n\n  // Render priority badge\n  const renderPriorityBadge = priority => {\n    const badges = {\n      high: {\n        class: 'priority-badge-high',\n        icon: '🔴',\n        text: 'High'\n      },\n      medium: {\n        class: 'priority-badge-medium',\n        icon: '🟠',\n        text: 'Medium'\n      },\n      low: {\n        class: 'priority-badge-low',\n        icon: '🟢',\n        text: 'Low'\n      }\n    };\n    const badge = badges[priority] || badges.medium;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `priority-badge ${badge.class}`,\n      children: [badge.icon, \" \", badge.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Format due date\n  const formatDueDate = dateString => {\n    if (!dateString) return null;\n    const date = new Date(dateString);\n    const now = new Date();\n\n    // Check if date is valid\n    if (isNaN(date.getTime())) return null;\n\n    // Format the date\n    const formattedDate = date.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n\n    // Calculate if it's overdue\n    const isOverdue = date < now && columns['completed'].items.find(item => item._id === item._id || item.id === item.id) === undefined;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `due-date ${isOverdue ? 'overdue' : ''}`,\n      children: [isOverdue ? '⚠️ ' : '📅 ', \"Due: \", formattedDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-board\",\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: Object.entries(columns).map(([columnId, column]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"kanban-column-title\",\n          children: [column.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"task-count\",\n            children: column.items.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: columnId,\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `kanban-tasks ${snapshot.isDraggingOver ? 'dragging-over' : ''}`,\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [column.items.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: task._id || task.id,\n              index: index,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `kanban-task ${snapshot.isDragging ? 'dragging' : ''}`,\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"task-title\",\n                    children: task.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"task-actions\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"edit-button\",\n                      onClick: () => onEdit(task),\n                      title: \"Edit Task\",\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fa fa-pencil\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 179,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"delete-button\",\n                      onClick: () => onDelete(task._id || task.id),\n                      title: \"Delete Task\",\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fa fa-trash\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 186,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 27\n                }, this), task.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"task-description\",\n                  children: task.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-meta\",\n                  children: [task.category && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"task-category\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-tag\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 33\n                    }, this), \" \", task.category]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 31\n                  }, this), task.priority && renderPriorityBadge(task.priority), task.dueDate && formatDueDate(task.dueDate)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 25\n              }, this)\n            }, task._id || task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 21\n            }, this)), provided.placeholder, column.items.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-column\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"No tasks in \", column.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"empty-tip\",\n                children: \"Drag tasks here or add a new task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, columnId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskKanban, \"bWTQo1xA2VlsbDiT8fEWbZrF7xQ=\");\n_c = TaskKanban;\nexport default TaskKanban;\nvar _c;\n$RefreshReg$(_c, \"TaskKanban\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","TaskKanban","tasks","onStatusChange","onEdit","onDelete","_s","columns","setColumns","name","items","newColumns","forEach","task","status","push","backlog","onDragEnd","result","destination","source","draggableId","droppableId","index","sourceColumn","destColumn","sourceItems","destItems","removed","splice","renderPriorityBadge","priority","badges","high","class","icon","text","medium","low","badge","className","children","fileName","_jsxFileName","lineNumber","columnNumber","formatDueDate","dateString","date","Date","now","isNaN","getTime","formattedDate","toLocaleDateString","month","day","isOverdue","find","item","_id","id","undefined","Object","entries","map","columnId","column","length","provided","snapshot","isDraggingOver","ref","innerRef","droppableProps","isDragging","draggableProps","dragHandleProps","title","onClick","description","category","dueDate","placeholder","_c","$RefreshReg$"],"sources":["D:/Projects/todo list/frontend/src/components/TaskKanban.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport './TaskKanban.css';\r\n\r\nconst TaskKanban = ({ tasks, onStatusChange, onEdit, onDelete }) => {\r\n  // Initialize columns with the proper structure\r\n  const [columns, setColumns] = useState({\r\n    'backlog': {\r\n      name: 'Backlog',\r\n      items: []\r\n    },\r\n    'active': {\r\n      name: 'In Progress',\r\n      items: []\r\n    },\r\n    'review': {\r\n      name: 'Under Review',\r\n      items: []\r\n    },\r\n    'completed': {\r\n      name: 'Completed',\r\n      items: []\r\n    }\r\n  });\r\n\r\n  // Prepare columns whenever tasks change\r\n  useEffect(() => {\r\n    const newColumns = {\r\n      'backlog': { name: 'Backlog', items: [] },\r\n      'active': { name: 'In Progress', items: [] },\r\n      'review': { name: 'Under Review', items: [] },\r\n      'completed': { name: 'Completed', items: [] }\r\n    };\r\n\r\n    // Distribute tasks into columns\r\n    tasks.forEach(task => {\r\n      const status = task.status || 'backlog';\r\n      if (newColumns[status]) {\r\n        newColumns[status].items.push(task);\r\n      } else {\r\n        // Default to backlog for any unrecognized status\r\n        newColumns.backlog.items.push(task);\r\n      }\r\n    });\r\n\r\n    setColumns(newColumns);\r\n  }, [tasks]);\r\n\r\n  // Handle drag end event\r\n  const onDragEnd = useCallback((result) => {\r\n    if (!result.destination) return;\r\n    \r\n    const { source, destination, draggableId } = result;\r\n\r\n    // If dropped in the same column at the same position, do nothing\r\n    if (\r\n      source.droppableId === destination.droppableId &&\r\n      source.index === destination.index\r\n    ) return;\r\n\r\n    // Get source and destination columns\r\n    const sourceColumn = columns[source.droppableId];\r\n    const destColumn = columns[destination.droppableId];\r\n    \r\n    // Create copies of the item arrays\r\n    const sourceItems = [...sourceColumn.items];\r\n    const destItems = source.droppableId === destination.droppableId \r\n      ? sourceItems \r\n      : [...destColumn.items];\r\n    \r\n    // Remove the item from source array\r\n    const [removed] = sourceItems.splice(source.index, 1);\r\n    \r\n    // Insert the item into destination array\r\n    destItems.splice(destination.index, 0, removed);\r\n    \r\n    // Update the state\r\n    setColumns({\r\n      ...columns,\r\n      [source.droppableId]: {\r\n        ...sourceColumn,\r\n        items: sourceItems\r\n      },\r\n      [destination.droppableId]: {\r\n        ...destColumn,\r\n        items: destItems\r\n      }\r\n    });\r\n\r\n    // If the column changed, update the task status in the backend\r\n    if (source.droppableId !== destination.droppableId) {\r\n      onStatusChange(draggableId, destination.droppableId);\r\n    }\r\n  }, [columns, onStatusChange]);\r\n\r\n  // Render priority badge\r\n  const renderPriorityBadge = (priority) => {\r\n    const badges = {\r\n      high: { class: 'priority-badge-high', icon: '🔴', text: 'High' },\r\n      medium: { class: 'priority-badge-medium', icon: '🟠', text: 'Medium' },\r\n      low: { class: 'priority-badge-low', icon: '🟢', text: 'Low' }\r\n    };\r\n    \r\n    const badge = badges[priority] || badges.medium;\r\n    \r\n    return (\r\n      <span className={`priority-badge ${badge.class}`}>\r\n        {badge.icon} {badge.text}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  // Format due date\r\n  const formatDueDate = (dateString) => {\r\n    if (!dateString) return null;\r\n    \r\n    const date = new Date(dateString);\r\n    const now = new Date();\r\n    \r\n    // Check if date is valid\r\n    if (isNaN(date.getTime())) return null;\r\n    \r\n    // Format the date\r\n    const formattedDate = date.toLocaleDateString('en-US', {\r\n      month: 'short',\r\n      day: 'numeric'\r\n    });\r\n    \r\n    // Calculate if it's overdue\r\n    const isOverdue = date < now && columns['completed'].items.find(\r\n      item => item._id === item._id || item.id === item.id\r\n    ) === undefined;\r\n    \r\n    return (\r\n      <span className={`due-date ${isOverdue ? 'overdue' : ''}`}>\r\n        {isOverdue ? '⚠️ ' : '📅 '}\r\n        Due: {formattedDate}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"kanban-board\">\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        {Object.entries(columns).map(([columnId, column]) => (\r\n          <div className=\"kanban-column\" key={columnId}>\r\n            <h3 className=\"kanban-column-title\">\r\n              {column.name} <span className=\"task-count\">{column.items.length}</span>\r\n            </h3>\r\n            \r\n            <Droppable droppableId={columnId}>\r\n              {(provided, snapshot) => (\r\n                <div\r\n                  className={`kanban-tasks ${snapshot.isDraggingOver ? 'dragging-over' : ''}`}\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                >\r\n                  {column.items.map((task, index) => (\r\n                    <Draggable \r\n                      key={task._id || task.id} \r\n                      draggableId={task._id || task.id} \r\n                      index={index}\r\n                    >\r\n                      {(provided, snapshot) => (\r\n                        <div\r\n                          className={`kanban-task ${snapshot.isDragging ? 'dragging' : ''}`}\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                        >\r\n                          <div className=\"task-header\">\r\n                            <h4 className=\"task-title\">{task.title}</h4>\r\n                            <div className=\"task-actions\">\r\n                              <button \r\n                                className=\"edit-button\"\r\n                                onClick={() => onEdit(task)}\r\n                                title=\"Edit Task\"\r\n                              >\r\n                                <i className=\"fa fa-pencil\"></i>\r\n                              </button>\r\n                              <button \r\n                                className=\"delete-button\"\r\n                                onClick={() => onDelete(task._id || task.id)}\r\n                                title=\"Delete Task\"\r\n                              >\r\n                                <i className=\"fa fa-trash\"></i>\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                          \r\n                          {task.description && (\r\n                            <p className=\"task-description\">{task.description}</p>\r\n                          )}\r\n                          \r\n                          <div className=\"task-meta\">\r\n                            {task.category && (\r\n                              <span className=\"task-category\">\r\n                                <i className=\"fa fa-tag\"></i> {task.category}\r\n                              </span>\r\n                            )}\r\n                            \r\n                            {task.priority && renderPriorityBadge(task.priority)}\r\n                            \r\n                            {task.dueDate && formatDueDate(task.dueDate)}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                  \r\n                  {column.items.length === 0 && (\r\n                    <div className=\"empty-column\">\r\n                      <p>No tasks in {column.name}</p>\r\n                      <p className=\"empty-tip\">Drag tasks here or add a new task</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        ))}\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskKanban;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}