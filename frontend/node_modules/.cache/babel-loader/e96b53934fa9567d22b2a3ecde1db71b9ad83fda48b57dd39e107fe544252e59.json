{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\todo list\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// pages/LoginPage.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation, Link } from 'react-router-dom';\nimport api from '../services/api';\nimport './loginpage.css'; // <--- IMPORT THE CSS FILE\n\n// Function to parse query params\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction useQuery() {\n  _s();\n  // ... (rest of the function remains the same)\n  return new URLSearchParams(useLocation().search);\n}\n_s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\nconst LoginPage = () => {\n  _s2();\n  // ... (all state and functions remain the same)\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null); // For registration success\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const query = useQuery(); // Hook to get query params\n\n  // Check for registration success message on mount\n  useEffect(() => {\n    if (query.get('registered') === 'true') {\n      setSuccessMessage('Registration successful! Please log in.');\n      // Optional: Remove the query param from URL without reload\n      history.replace('/login');\n    }\n    if (query.get('sessionExpired') === 'true') {\n      setError('Your session has expired. Please log in again.');\n      history.replace('/login');\n    }\n    // Removed dependency array warning suppression, added proper dependencies\n  }, [query, history]); // Correct dependencies\n\n  // Redirect if already logged in (runs after checking query params)\n  useEffect(() => {\n    if (api.auth.isAuthenticated()) {\n      history.replace('/tasks'); // Use replace so back button doesn't go to login\n    }\n    // Removed api.auth from dependency array as isAuthenticated likely doesn't change\n    // based on the api.auth instance itself but its internal state.\n    // If isAuthenticated *itself* could change reference, add api.auth.\n  }, [history]); // Correct dependencies\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    setSuccessMessage(null); // Clear success message on new attempt\n\n    // Basic client-side validation\n    if (!email.trim()) {\n      setError('Email is required');\n      return;\n    }\n    if (!password.trim()) {\n      setError('Password is required');\n      return;\n    }\n    setLoading(true);\n    try {\n      await api.auth.login({\n        email,\n        password\n      });\n      history.push('/tasks');\n    } catch (err) {\n      const errorMessage = err.message || 'Login failed. Please check your credentials.';\n      setError(errorMessage);\n      console.error('Login error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card auth-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"auth-title\",\n        children: \"Login to TaskFlow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), successMessage &&\n      /*#__PURE__*/\n      // Added alert-dismissible for styling consistency with error\n      _jsxDEV(\"div\", {\n        className: \"alert alert-success alert-dismissible\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSuccessMessage(null),\n          className: \"btn-close\",\n          \"aria-label\": \"Close\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger alert-dismissible\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setError(null),\n          className: \"btn-close\",\n          \"aria-label\": \"Close\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"auth-form\",\n        onSubmit: handleSubmit,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            disabled: loading,\n            className: \"form-input\" // Use consistent class\n            ,\n            placeholder: \"your.email@example.com\",\n            required: true,\n            autoFocus: true // Keep autoFocus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            disabled: loading,\n            className: \"form-input\" // Use consistent class\n            ,\n            placeholder: \"Enter your password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forgot-password text-end mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/forgot-password\",\n            children: \"Forgot password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          // Use consistent button classes\n          className: \"button button-primary button-block\",\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"spinner-border spinner-border-sm\",\n              role: \"status\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \" Logging in...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-footer mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s2(LoginPage, \"izCYrOxXrEZyFSY11WFz73jRJKk=\", false, function () {\n  return [useHistory, useQuery];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","useLocation","Link","api","jsxDEV","_jsxDEV","Fragment","_Fragment","useQuery","_s","URLSearchParams","search","LoginPage","_s2","email","setEmail","password","setPassword","error","setError","successMessage","setSuccessMessage","loading","setLoading","history","query","get","replace","auth","isAuthenticated","handleSubmit","e","preventDefault","trim","login","push","err","errorMessage","message","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","noValidate","htmlFor","id","type","value","onChange","target","disabled","placeholder","required","autoFocus","to","role","_c","$RefreshReg$"],"sources":["D:/Projects/todo list/frontend/src/pages/LoginPage.js"],"sourcesContent":["// pages/LoginPage.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory, useLocation, Link } from 'react-router-dom';\r\nimport api from '../services/api';\r\nimport './loginpage.css'; // <--- IMPORT THE CSS FILE\r\n\r\n// Function to parse query params\r\nfunction useQuery() {\r\n  // ... (rest of the function remains the same)\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst LoginPage = () => {\r\n  // ... (all state and functions remain the same)\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState(null); // For registration success\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const query = useQuery(); // Hook to get query params\r\n\r\n  // Check for registration success message on mount\r\n  useEffect(() => {\r\n    if (query.get('registered') === 'true') {\r\n      setSuccessMessage('Registration successful! Please log in.');\r\n      // Optional: Remove the query param from URL without reload\r\n      history.replace('/login');\r\n    }\r\n    if (query.get('sessionExpired') === 'true') {\r\n        setError('Your session has expired. Please log in again.');\r\n        history.replace('/login');\r\n    }\r\n    // Removed dependency array warning suppression, added proper dependencies\r\n  }, [query, history]); // Correct dependencies\r\n\r\n  // Redirect if already logged in (runs after checking query params)\r\n  useEffect(() => {\r\n    if (api.auth.isAuthenticated()) {\r\n      history.replace('/tasks'); // Use replace so back button doesn't go to login\r\n    }\r\n    // Removed api.auth from dependency array as isAuthenticated likely doesn't change\r\n    // based on the api.auth instance itself but its internal state.\r\n    // If isAuthenticated *itself* could change reference, add api.auth.\r\n  }, [history]); // Correct dependencies\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setSuccessMessage(null); // Clear success message on new attempt\r\n\r\n    // Basic client-side validation\r\n    if (!email.trim()) {\r\n      setError('Email is required');\r\n      return;\r\n    }\r\n    if (!password.trim()) {\r\n        setError('Password is required');\r\n        return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      await api.auth.login({ email, password });\r\n      history.push('/tasks');\r\n\r\n    } catch (err) {\r\n      const errorMessage = err.message || 'Login failed. Please check your credentials.';\r\n      setError(errorMessage);\r\n      console.error('Login error:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"container auth-container\">\r\n      <div className=\"card auth-card\">\r\n        <h1 className=\"auth-title\">Login to TaskFlow</h1>\r\n\r\n        {/* Success Message (e.g., after registration) */}\r\n        {successMessage && (\r\n          // Added alert-dismissible for styling consistency with error\r\n          <div className=\"alert alert-success alert-dismissible\">\r\n            <span>{successMessage}</span> {/* Wrap text in span for flex alignment */}\r\n             <button onClick={() => setSuccessMessage(null)} className=\"btn-close\" aria-label=\"Close\">\r\n                ×\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* Error Message */}\r\n        {error && (\r\n          <div className=\"alert alert-danger alert-dismissible\">\r\n            <span>{error}</span> {/* Wrap text in span for flex alignment */}\r\n            <button onClick={() => setError(null)} className=\"btn-close\" aria-label=\"Close\">\r\n                ×\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        <form className=\"auth-form\" onSubmit={handleSubmit} noValidate>\r\n          {/* Email Input */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input\r\n              id=\"email\"\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              disabled={loading}\r\n              className=\"form-input\" // Use consistent class\r\n              placeholder=\"your.email@example.com\"\r\n              required\r\n              autoFocus // Keep autoFocus\r\n            />\r\n          </div>\r\n\r\n          {/* Password Input */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password:</label>\r\n            <input\r\n              id=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              disabled={loading}\r\n              className=\"form-input\" // Use consistent class\r\n              placeholder=\"Enter your password\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Forgot Password Link */}\r\n          {/* Kept existing classes text-end mb-3 */}\r\n          <div className=\"forgot-password text-end mb-3\">\r\n            <Link to=\"/forgot-password\">Forgot password?</Link>\r\n          </div>\r\n\r\n          {/* Submit Button */}\r\n          <button\r\n            // Use consistent button classes\r\n            className=\"button button-primary button-block\"\r\n            type=\"submit\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? (\r\n                 <>\r\n                    {/* Use consistent spinner classes */}\r\n                    <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                    <span> Logging in...</span>\r\n                </>\r\n            ) : 'Login'}\r\n          </button>\r\n        </form>\r\n\r\n        {/* Footer Link */}\r\n        {/* Kept existing class mt-4 */}\r\n        <div className=\"auth-footer mt-4\">\r\n          <p>Don't have an account? <Link to=\"/register\">Register</Link></p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}